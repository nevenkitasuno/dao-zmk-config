/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define COL 1
#define NUM 2
#define ARR 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
   &to COL &kp PRINTSCREEN    &kp Q &kp W &kp E &kp R &kp T &kp Y         &kp U  &kp I     &kp O   &kp P    &kp LBKT &kp RBKT
           &mt RALT LG(SPACE) &kp A &kp S &kp D &kp F &kp G &kp H         &kp J  &kp K     &kp L   &kp SEMI &kp SQT
           &kp GRAVE          &kp Z &kp X &kp C &kp V &kp B &kp N         &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                         &mt LALT ESC &mt LCTRL TAB &lt ARR SPACE         &lt NUM RET &mt LSHFT BSPC &mt LGUI DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &to DEF &trans &trans &trans &kp F  &kp P  &kp G          &kp J  &kp L  &kp U  &kp Y  &kp ;  &trans &trans
           &trans &trans &kp R  &kp S  &kp T  &kp D          &trans &kp N  &kp E  &kp I  &kp O  &trans
           &trans &trans &trans &trans &trans &trans         &kp K  &trans &trans &trans &trans &trans
                                &trans &trans &trans         &trans &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans &trans         &trans &kp N7 &kp N8 &kp N9 &kp N0    &kp C_VOL_UP &kp C_PLAY_PAUSE
          &trans &trans &trans &trans &trans &trans         &trans &kp N4 &kp N5 &kp N6 &kp MINUS &kp C_VOL_DN
          &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4         &trans &kp N1 &kp N2 &kp N3 &kp EQUAL &kp C_MUTE
                               &trans &trans &trans         &trans &mt LSHFT C_PREV &mt LGUI C_NEXT
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans   &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp C_BRI_UP         &trans &kp F7 &kp F8 &kp F9 &kp F10 &trans &kp C_POWER
          &kp CAPS &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp C_BRI_DN         &trans &kp F4 &kp F5 &kp F6 &kp F11 &trans
          &trans   &trans   &trans    &trans    &trans    &kp C_SLEEP          &trans &kp F1 &kp F2 &kp F3 &kp F12 &trans
                                                  &trans &trans &trans         &trans &trans &trans
                        >;
                };
        };
};
